// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios12.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AllegionLogging
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import AllegionLogging
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct AlConsoleLogger : AllegionLogging.AlLogger {
  public init()
  public func log(_ logLevel: AllegionLogging.AlLogLevel, message: Swift.String, file: Swift.StaticString, function: Swift.StaticString, line: Swift.UInt)
}
public enum AlLogLevel {
  case verbose
  case debug
  case info
  case warning
  case error
  public static func == (a: AllegionLogging.AlLogLevel, b: AllegionLogging.AlLogLevel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension AllegionLogging.AlLogLevel : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
public protocol AlLogger {
  func log(_ logLevel: AllegionLogging.AlLogLevel, message: Swift.String, file: Swift.StaticString, function: Swift.StaticString, line: Swift.UInt)
  func getLogFilePaths() -> [Foundation.URL]?
}
extension AllegionLogging.AlLogger {
  public func getLogFilePaths() -> [Foundation.URL]?
}
public struct AlLogManager {
  public static var currentLogger: (any AllegionLogging.AlLogger)?
  public static func log(_ logLevel: AllegionLogging.AlLogLevel, message: Swift.String, file: Swift.StaticString = #file, function: Swift.StaticString = #function, line: Swift.UInt = #line)
  public static func logDebug(_ message: Swift.String, file: Swift.StaticString = #file, function: Swift.StaticString = #function, line: Swift.UInt = #line)
  public static func logVerbose(_ message: Swift.String, file: Swift.StaticString = #file, function: Swift.StaticString = #function, line: Swift.UInt = #line)
  public static func logInfo(_ message: Swift.String, file: Swift.StaticString = #file, function: Swift.StaticString = #function, line: Swift.UInt = #line)
  public static func logWarning(_ message: Swift.String, file: Swift.StaticString = #file, function: Swift.StaticString = #function, line: Swift.UInt = #line)
  public static func logError(_ message: Swift.String, file: Swift.StaticString = #file, function: Swift.StaticString = #function, line: Swift.UInt = #line)
}
extension AllegionLogging.AlLogLevel : Swift.Equatable {}
extension AllegionLogging.AlLogLevel : Swift.Hashable {}
