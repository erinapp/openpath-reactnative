// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios11.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Allegion_Extensions_iOS
@_exported import Allegion_Extensions_iOS
import CoreBluetooth
import Foundation
import Swift
import _Concurrency
extension CoreBluetooth.CBManagerState : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
extension Swift.Encodable {
  public var data: Foundation.Data? {
    get
  }
}
extension Foundation.Data {
  public var hexDescription: Swift.String {
    get
  }
  public var hexString: Swift.String {
    get
  }
  public var byteArray: [Swift.UInt8] {
    get
  }
}
extension Foundation.Data {
  public init?(hexString: Swift.String)
  public func chunked(_ size: Swift.Int) -> [Foundation.Data]?
}
extension Swift.String {
  public var hexData: Foundation.Data? {
    get
  }
  public var strip: Swift.String {
    get
  }
  public var isValidURL: Swift.Bool {
    get
  }
  public var bool: Swift.Bool? {
    get
  }
  public var humanReadableTitle: Swift.String {
    get
  }
}
extension UIKit.UIColor {
  public var engageOrange: UIKit.UIColor {
    get
  }
  public var engageWhite: UIKit.UIColor {
    get
  }
  public var engageDarkGray: UIKit.UIColor {
    get
  }
  public var engageMediumGray: UIKit.UIColor {
    get
  }
  public var engageLightGray: UIKit.UIColor {
    get
  }
  public var engageVeryLightGray: UIKit.UIColor {
    get
  }
  public var engageGold: UIKit.UIColor {
    get
  }
  public var engageLightOrange: UIKit.UIColor {
    get
  }
  public var engageRust: UIKit.UIColor {
    get
  }
  public var engageGreen: UIKit.UIColor {
    get
  }
  public var engageBlue: UIKit.UIColor {
    get
  }
  public var engageTeal: UIKit.UIColor {
    get
  }
  public var engagePurple: UIKit.UIColor {
    get
  }
  public var translucentGray: UIKit.UIColor {
    get
  }
  public var defaultGray: UIKit.UIColor {
    get
  }
  public var disabledGray: UIKit.UIColor {
    get
  }
  public var tableHeaderGray: UIKit.UIColor {
    get
  }
  public var primaryTextGray: UIKit.UIColor {
    get
  }
  public var wizardGray: UIKit.UIColor {
    get
  }
  public var engageMutedOrange: UIKit.UIColor {
    get
  }
  public var siteSurveyGreen: UIKit.UIColor {
    get
  }
  public var siteSurveyYellow: UIKit.UIColor {
    get
  }
  public var siteSurveyRed: UIKit.UIColor {
    get
  }
}
extension UIKit.UIDevice {
  @_Concurrency.MainActor(unsafe) public var isSimulator: Swift.Bool {
    get
  }
}
